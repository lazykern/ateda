# infrastructure/k8s/helmfile.yaml

# Global hooks
hooks:
  # Ensure the target namespace exists before presync hooks run
  - events: ["prepare"]
    showlogs: true
    command: "sh"
    args:
      - "-c"
      - |
        kubectl create namespace ateda-{{ .Environment.Name }} --dry-run=client -o yaml | kubectl apply -f -

# Define Helm repositories
repositories:
  - name: nessie
    url: https://charts.projectnessie.org
  - name: bitnami        
    url: https://charts.bitnami.com/bitnami
  - name: minio
    url: https://charts.min.io/
  - name: starrocks
    url: https://starrocks.github.io/starrocks-kubernetes-operator
  - name: metrics-server-repo
    url: https://kubernetes-sigs.github.io/metrics-server/
  - name: prometheus-community
    url: https://prometheus-community.github.io/helm-charts
  - name: grafana
    url: https://grafana.github.io/helm-charts

---

environments:
  dev:
    values:
      - environment: dev
      - namespace: "ateda-dev"
      - ./environments/dev/secrets.yaml

  prod: {}

---

# Define Helm releases
releases:
  # --- PostgreSQL ---
  - name: "ateda-postgres-{{ .Values.environment }}"
    namespace: "{{ .Values.namespace }}"
    chart: bitnami/postgresql
    version: "16.6.3"
    values:
      - "./components/postgres/values-{{ .Values.environment }}.yaml.gotmpl"
  
  # --- Nessie ---
  - name: "ateda-nessie-{{ .Values.environment }}"
    namespace: "{{ .Values.namespace }}"
    chart: nessie/nessie
    version: "0.103.2"
    values:
      - "./components/nessie/values-{{ .Values.environment }}.yaml.gotmpl"
    needs:
      - "ateda-postgres-{{ .Values.environment }}"
    hooks:
      - events: ["presync"]
        showlogs: true
        command: "sh"
        args:
          - "-c"
          - |
            kubectl create secret generic nessie-jdbc-creds-{{ .Values.environment }} --namespace={{ .Values.namespace }} --from-literal=username={{ .Values.postgres.username }} --from-literal=password={{ .Values.postgres.password }} --dry-run=client -o yaml | kubectl apply -f -
      - events: ["postuninstall"]
        showlogs: true
        command: kubectl
        args:
          - delete
          - secret
          - nessie-jdbc-creds-{{ .Values.environment }}
          - --namespace={{ .Values.namespace }}
          - --ignore-not-found=true
      - events: ["presync"]
        showlogs: true
        command: "sh"
        args:
          - "-c"
          - |
            kubectl create secret generic nessie-minio-creds-{{ .Values.environment }} --namespace={{ .Values.namespace }} --from-literal=awsAccessKeyId={{ .Values.minio.rootUser }} --from-literal=awsSecretAccessKey={{ .Values.minio.rootPassword }} --dry-run=client -o yaml | kubectl apply -f -
      - events: ["postuninstall"]
        showlogs: true
        command: kubectl
        args:
          - delete
          - secret
          - nessie-minio-creds-{{ .Values.environment }}
          - --namespace={{ .Values.namespace }}
          - --ignore-not-found=true
      - events: ["postsync"]
        showlogs: true
        command: "kubectl"
        args:
        - "patch"
        - "service"
        - "ateda-nessie-{{ .Values.environment }}"
        - "--namespace"
        - "{{ .Values.namespace }}"
        - "--type=json"
        - "-p=[{\"op\": \"replace\", \"path\": \"/spec/ports/0/nodePort\", \"value\": 30120}]"
      - events: ["postuninstall"]
        showlogs: true
        command: "kubectl"
        args:
          - "delete"
          - "service"
          - "ateda-nessie-{{ .Values.environment }}"

  - name: "ateda-minio-{{ .Values.environment }}"
    namespace: "{{ .Values.namespace }}"
    chart: minio/minio
    version: "5.4.0"
    values:
      - "./components/minio/values-{{ .Values.environment }}.yaml.gotmpl"

  # --- StarRocks ---
  - name: "ateda-starrocks-{{ .Values.environment }}"
    namespace: "{{ .Values.namespace }}"
    chart: starrocks/kube-starrocks
    version: "1.10.1"
    values:
      # This file needs to be created and configured
      - "./components/starrocks/values-{{ .Values.environment }}.yaml.gotmpl" 
    # Add dependencies 
    disableValidationOnInstall: true
    needs:
      - "ateda-minio-{{ .Values.environment }}"
      # Depends on Nessie mainly for the minio credential secret hook
      - "ateda-nessie-{{ .Values.environment }}" 

  # --- Metrics Server --- # Added for node/pod resource monitoring
  - name: "metrics-server"
    # Deployed cluster-wide, often in kube-system
    namespace: "kube-system"
    chart: metrics-server-repo/metrics-server
    version: "3.12.2"
    # Values needed for many local clusters (e.g., Docker Desktop, Kind, Minikube)
    values:
      - args:
          - --kubelet-insecure-tls
          - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname

  # --- Prometheus Stack --- # For monitoring
  - name: kube-prometheus-stack
    namespace: "monitoring" # Deploy in a dedicated monitoring namespace
    chart: prometheus-community/kube-prometheus-stack
    disableValidationOnInstall: true
    version: "56.6.0" # Use a recent, stable version
    values:
      - "./components/prometheus/values-{{ .Values.environment }}.yaml.gotmpl"