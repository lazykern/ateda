x-dagster-common: &dagster-common
  environment:
    DAGSTER_HOME: /opt/dagster/dagster_home
    DAGSTER_POSTGRES_USER: "postgres"
    DAGSTER_POSTGRES_PASSWORD: "postgres"
    DAGSTER_POSTGRES_DB: "postgres_db"
    DAGSTER_POSTGRES_HOST: "postgres"
  networks:
    - ateda_network
  volumes:
    - ./dagster-workspace.yaml:/opt/dagster/dagster_home/dagster-workspace.yaml
    - ./dagster.yaml:/opt/dagster/dagster_home/dagster.yaml
    - /var/run/docker.sock:/var/run/docker.sock
  depends_on:
    - postgres
    - dagster_grpc_server

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres_db"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - ateda_network

  dagster_grpc_server:
    build:
      context: .
      dockerfile: docker/dagster/Dockerfile.code
    image: ateda-dagster-code
    container_name: dagster_grpc_server
    restart: always
    environment:
      DAGSTER_POSTGRES_USER: "postgres"
      DAGSTER_POSTGRES_PASSWORD: "postgres"
      DAGSTER_POSTGRES_DB: "postgres_db"
      DAGSTER_POSTGRES_HOST: "postgres"
      DAGSTER_CURRENT_IMAGE: "ateda-dagster-code"
    networks:
      - ateda_network
    depends_on:
      - postgres

  dagster_webserver:
    <<: *dagster-common
    build:
      context: .
      dockerfile: ./docker/dagster/Dockerfile
    image: ateda-dagster-system
    entrypoint:
      [
        "dagster-webserver",
        "-w",
        "/opt/dagster/dagster_home/dagster-workspace.yaml",
        "-h",
        "0.0.0.0",
        "-p",
        "3000",
      ]
    container_name: dagster_webserver
    ports:
      - "3000:3000"

  dagster_daemon:
    <<: *dagster-common
    build:
      context: .
      dockerfile: ./docker/dagster/Dockerfile
    image: ateda-dagster-system
    entrypoint:
      [
        "dagster-daemon",
        "run",
        "-w",
        "/opt/dagster/dagster_home/dagster-workspace.yaml",
      ]
    container_name: dagster_daemon
    restart: on-failure

volumes:
  postgres_data:

networks:
  ateda_network:
    driver: bridge
    name: ateda_network
