# Example Environment variables for local development with 'dagster dev' and Docker services
# Copy this file to .env and fill in appropriate values (especially secrets)

# == Dagster Instance Configuration ==
# Tells Dagster where to store local metadata (runs, assets, etc.)
# MUST be an absolute path to the directory within your project
DAGSTER_HOME=/path/to/your/project/.dagster_home # <-- !!! UPDATE THIS PATH IN .env !!!

# == Postgres Configuration (for Dagster Storage) ==
# Must match names expected by dagster.yaml
DAGSTER_POSTGRES_USER=postgres
DAGSTER_POSTGRES_PASSWORD=postgres # !!! CHANGE THIS IN .env FOR PRODUCTION/SHARED ENVIRONMENTS !!!
DAGSTER_POSTGRES_DB=postgres_db
DAGSTER_POSTGRES_HOST=localhost # Connect to Postgres running in Docker via exposed port

# == MinIO / S3 Compatible Storage ==
# For Dagster Resources (e.g., S3Resource, IOManager)
S3_ENDPOINT_URL=http://localhost:9000 # Connect to MinIO running in Docker via exposed port
# Root user/pass for MinIO itself (used for initial bucket creation)
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadminpassword # !!! CHANGE THIS IN .env FOR PRODUCTION/SHARED ENVIRONMENTS !!!
# Credentials Dagster's S3Resource uses to connect
AWS_ACCESS_KEY_ID=minioadmin
AWS_SECRET_ACCESS_KEY=minioadminpassword # !!! CHANGE THIS IN .env FOR PRODUCTION/SHARED ENVIRONMENTS !!!

# == Application Specific S3 Buckets ==
S3_BRONZE_BUCKET=ateda-bronze
S3_SILVER_BUCKET=ateda-silver
S3_GOLD_BUCKET=ateda-gold
S3_LANDING_BUCKET=ateda-landing # Required: Bucket for Dagster IO manager landing zone (e.g., raw tarballs).

# == Add other environment-specific variables below ==
# e.g., SOME_API_KEY=
